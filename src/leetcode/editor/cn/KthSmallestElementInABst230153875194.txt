
    /**
     * Definition for a binary tree node.
     * public class TreeNode {
     *     int val;
     *     TreeNode left;
     *     TreeNode right;
     *     TreeNode() {}
     *     TreeNode(int val) { this.val = val; }
     *     TreeNode(int val, TreeNode left, TreeNode right) {
     *         this.val = val;
     *         this.left = left;
     *         this.right = right;
     *     }
     * }
     */
    class Solution {
        public int kthSmallest(TreeNode root, int k) {
            Stack<TreeNode> stack = new Stack<>();
            TreeNode cur = root;
            while (!stack.isEmpty() || cur != null) {
                while (cur != null) {
                    stack.push(cur);
                    cur = cur.left;
                }
                TreeNode curNode = stack.pop();
                //    System.out.println("curNode=" + curNode.val + " k=" + k);
                k--;
                if (k == 0) {
                    return curNode.val;
                }
                if (curNode.right != null) {
                    cur = curNode.right;
                }
            }
            return Integer.MIN_VALUE;
        }
    }

//runtime:1 ms
//memory:38.3 MB
